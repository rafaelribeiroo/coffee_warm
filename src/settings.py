"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from decouple import config as config_decouple

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config_decouple('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config_decouple('DEBUG', default=True, cast=bool)

if DEBUG:  # is true
    ALLOWED_HOSTS = []
else:  # is false
    ALLOWED_HOSTS = ['suaescolha.herokuapp.com', '.suaescolha.com', ]
    ADMINS = [
        ('Rafael Ribeiro', 'pereiraribeirorafael@gmail.com')
    ]
    MANAGERS = ADMINS

# Application definition
INSTALLED_APPS = [
    # Django Apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 3rd libraries
    # Qntas visualizacoes
    'hitcount',
    # avatar pros user
    'imagekit',
    # editor WYSIWYG
    'froala_editor',
    # Render form manually
    'widget_tweaks',
    # Media on S3
    'storages',

    # My apps
    'src.apps.core',
    'src.apps.posts',
    'src.apps.contact',
    'src.apps.accounts',
]

if not DEBUG:
    INSTALLED_APPS += [
        # Media no S3
        'storages',
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',  # Padrão
        'NAME': config_decouple('DB_NAME'),  # Nome do seu banco
        'CONN_MAX_AGE': 60,  # Para setar a persistência de conexão para 60seg
        'USER': config_decouple('DB_USER'),  # Seu usuário
        'PASSWORD': config_decouple('DB_PASSWORD'),  # Sua senha
        'HOST': config_decouple('DB_HOST'),  # inet end
        # 8000 is default #Nem precisa pôr a porta, rodará na 8000
        # (para testes)
        'PORT': '',
    }
}

if not DEBUG:
    import dj_database_url as db
    # Configuring Heroku to Postgre
    DATABASES['default'] = db.config()
    # Honor the 'X-Forwarded-Proto' header for request.is_secure()
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    # BASE_DIR above src/
    PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
    # Whitenoise needs STATIC_ROOT
    STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
    # Whitenoise referenced
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    # Chave de acesso pra upar midias no S3
    AWS_ACCESS_KEY_ID = config_decouple('AWS_ACCESS_KEY_ID')
    # Criar um bucket
    AWS_AUTO_CREATE_BUCKET = True
    # Apelidando o bucket
    AWS_STORAGE_BUCKET_NAME = 'your_choice'
    # Definindo as permissoes
    AWS_DEFAULT_ACL = 'public-read'
    # Chave de acesso privada
    AWS_SECRET_ACCESS_KEY = config_decouple('AWS_SECRET_ACCESS_KEY')
    # Dominio que o Django pegara minhas midias
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
    # Apontando nosso arquivo storage_backends para configuracoes
    DEFAULT_FILE_STORAGE = 'src.storage_backends.MediaStorage'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

AUTH_USER_MODEL = 'accounts.User'

# Configuracao GMAIL para enviar EMAIL de notificacao
# E receber dos usuarios sobre feedbacks
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = config_decouple('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config_decouple('EMAIL_HOST_PASSWORD')
EMAIL_PORT = 587

DEFAULT_FROM_EMAIL = config_decouple('DEFAULT_FROM_EMAIL')

DOMAIN = '127.0.0.1:8000'

THUMBNAIL_ALIASES = {
    '': {
        'avatar': {'size': (50, 50), 'crop': True},
    },
}

HITCOUNT_HITS_PER_IP_LIMIT = 0  # unlimited
HITCOUNT_EXCLUDE_USER_GROUP = ()  # not used
HITCOUNT_KEEP_HIT_ACTIVE = {'minutes': 5}
HITCOUNT_KEEP_HIT_IN_DATABASE = {'days': 30}

FROALA_INCLUDE_JQUERY = False
# USE_FROALA_EDITOR = True

# S3
AWS_ACCESS_KEY_ID = config_decouple('AWS_ACCESS_KEY_ID')

AWS_AUTO_CREATE_BUCKET = True
AWS_STORAGE_BUCKET_NAME = 'its-choice'
# https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl
AWS_DEFAULT_ACL = 'public-read'
# AWS_S3_REGION_NAME = "us-west-2"

AWS_SECRET_ACCESS_KEY = config_decouple('AWS_SECRET_ACCESS_KEY')
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

DEFAULT_FILE_STORAGE = 'src.storage_backends.MediaStorage'
